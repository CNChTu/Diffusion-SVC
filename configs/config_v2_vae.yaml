data:
  f0_extractor: 'fcpe' # 'parselmouth', 'dio', 'harvest', 'crepe', 'rmvpe' or 'fcpe'
  f0_min: 65 # about C2
  f0_max: 800 # about G5
  sampling_rate: 44100
  block_size: 512 # Equal to hop_length
  duration: 2 # Audio duration during training, must be less than the duration of the shortest audio clip
  encoder: 'contentvec768l12' # 'hubertsoft', 'hubertbase', 'hubertbase768', 'contentvec', 'contentvec768' or 'contentvec768l12' or 'cnhubertsoftfish'
  cnhubertsoft_gate: 10 # only use with cnhubertsoftfish
  encoder_sample_rate: 16000
  encoder_hop_size: 320
  encoder_out_channels: 768 # 256 if using 'hubertsoft'
  encoder_ckpt: pretrain/contentvec/checkpoint_best_legacy_500.pt
  units_forced_mode: 'nearest' # Recommended 'nearest',experiment 'rfa512to441' and 'rfa441to512' ; 'left'  only use for compatible with history code
  volume_noise: 0 # if not 0 ,add noise for volume in train ;;;;EXPERIMENTAL FUNCTION, NOT RECOMMENDED FOR USE;;;;
  train_path: op/train # Create a folder named "audio" under this path and put the audio clip in it
  valid_path: op/val # Create a folder named "audio" under this path and put the audio clip in it
  extensions: # List of extension included in the data collection
    - wav
model:
  type: 'DiffusionV2'
  n_hidden: 256
  use_pitch_aug: true  
  n_spk: 1 # max number of different speakers
  z_rate: 0 # dont change
  mean_only: true
  max_beta: 0.02
  spec_min: -8.1980
  spec_max: 7.7127
  denoise_fn:
    type: 'WaveNet'
    wn_layers: 30
    wn_chans: 768
    wn_dilation: 12 # dont change
    wn_kernel: 3 # dont change
    wn_tf_use: true # use WaveNet with Transformer
    wn_tf_rf: false # only wn_tf_use is true and here is true will use RoFormer
    wn_tf_n_layers: 2
    wn_tf_n_head: 4
device: cuda
vocoder:
  type: 'hifivaegan'
  ckpt: 'pretrain/hifivaegan/G_224800.pth'
infer:
  speedup: 1
  method: 'pndm' # 'ddim', 'pndm', 'dpm-solver' or 'unipc'
env:
  expdir: exp/wavenet-test_vae
  gpu_id: 0
train:
  ema_decay: 0.9999 # <1
  use_ema: false
  num_workers: 2 # If your cpu and gpu are both very strong, set to 0 may be faster!
  amp_dtype: fp32 # fp32, fp16 or bf16 (fp16 or bf16 may be faster if it is supported by your gpu)
  batch_size: 48
  cache_all_data: true # Save Internal-Memory or Graphics-Memory if it is false, but may be slow
  cache_device: 'cpu' # Set to 'cuda' to cache the data into the Graphics-Memory, fastest speed for strong gpu
  cache_fp16: true
  epochs: 100000
  interval_log: 10
  interval_val: 2000
  interval_force_save: 10000
  lr: 0.0002
  decay_step: 100000
  gamma: 0.5
  weight_decay: 0
  save_opt: false
